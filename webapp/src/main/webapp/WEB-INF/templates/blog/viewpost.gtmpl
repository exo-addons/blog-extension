<%
import java.util.HashSet;
import java.util.List;
import java.text.SimpleDateFormat;
import javax.jcr.Node;
import org.exoplatform.portal.webui.util.Util;
import org.exoplatform.services.jcr.RepositoryService;
import org.exoplatform.services.jcr.core.ManageableRepository;
import org.exoplatform.services.jcr.ext.hierarchy.NodeHierarchyCreator;
import org.exoplatform.services.organization.OrganizationService;
import org.exoplatform.services.organization.UserHandler;
import org.exoplatform.services.wcm.core.NodeLocation;
import org.exoplatform.services.cms.comments.CommentsService;
import org.exoplatform.services.cms.folksonomy.NewFolksonomyService;
import org.exoplatform.services.cms.taxonomy.TaxonomyService;
import org.exoplatform.social.core.manager.IdentityManager;
import org.exoplatform.social.core.identity.provider.OrganizationIdentityProvider;
import org.exoplatform.wcm.webui.Utils;
import org.exoplatform.services.wcm.utils.WCMCoreUtils;
import org.exoplatform.services.cms.voting.VotingService;
import org.exoplatform.com.blog.service.BlogService;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;


def node = uicomponent.node
def post = uicomponent.originalNode
def uuid = post.getUUID()
def viewer = _ctx.getRequestContext().getRemoteUser()
def title = post.getProperty("exo:title").string
def poster = post.getProperty("exo:owner").string
def author = fullName(poster)
def avatar = avatarUrl(poster)
def postPath = post.getPath();

def formatter =  new SimpleDateFormat("MMM d, yyyy")
def date = formatter.format(post.getProperty("exo:dateCreated").date.time)

def rcontext = _ctx.getRequestContext() ;
def jsManager = rcontext.getJavascriptManager();
jsManager.require("SHARED/blogjs", "blogjs")
.addScripts("blogjs.initScroll();");
def isAdmin = Utils.isAdministratorUser();

VotingService votingService = WCMCoreUtils.getService(VotingService.class);
def voteValueOfUser = votingService.getVoteValueOfUser(post, viewer, "en");
def voteTotal = votingService.getVoteTotal(post);

def voteAvg = post.getProperty("exo:votingRate").getValue().getDouble();
def blogService = WCMCoreUtils.getService(BlogService.class);
HttpSession httpSession = Util.getPortalRequestContext().getRequest().getSession();
def visitedPost = 0;
def currentPostVisited = httpSession.getAttribute(uuid);

if(currentPostVisited==null || currentPostVisited != uuid){
	// increase post visited
	blogService.increasePostView(post);
	httpSession.setAttribute(uuid, uuid);
}
visitedPost = blogService.getPostViewCount(post);
def ws = post.getSession().getWorkspace().getName();
%>
<!--script type="text/javascript">var switchTo5x=true;</script>
<script type="text/javascript" src="http://w.sharethis.com/button/buttons.js"></script>
<script type="text/javascript">stLight.options({publisher: "131ce3d5-a240-42f0-9945-f882036f2d00", doNotHash: false, doNotCopy: false, hashAddressBar: false});</script-->

<div class="view-post" >
    <div id="content" class="clearfix content-blog">
        <div id="main" class="main-content" role="main">

            <article id="post-$uuid" class="uiBox post type-post status-publish format-standard hentry clearfix" style="padding:7px" role="article">
                <header class="header">
                    <div class="page-header"><h3 class="single-title" itemprop="headline">$title <%=post.getPath()%></h3></div>
                    <div class="meta media">
                    <div class="pull-left">
                        <a class="avatarXSmall" href="/portal/intranet/profile/$poster" rel="author" data-placement="bottom" data-original-title="$author">
                            <img alt="$author" src="$avatar">
                        </a>
                    </div>
                    <div class="media-body">
                        <div class="author">
                            <a href="/portal/intranet/profile/$poster">$author</a>
                            <span class="dateTime" datetime="$date">$date</span>
                        </div>
                    </div>
                    </div>
                </header> <!-- end article header -->

                <section class="post-content">
                    <% renderPost(post) %>
                </section> <!-- end article section -->

                <footer>
                    <div class="tags"><% tags(post) %></div>
                    <div class="share-this">
                 		 <span class='st_googleplus_hcount' displayText='Google +'></span>
		                  <span class='st_sharethis_hcount' displayText='ShareThis'></span>
		                  <span class='st_facebook_hcount' displayText='Facebook'></span>
		                  <span class='st_twitter_hcount' displayText='Tweet'></span>
		                  <span class='st_linkedin_hcount' displayText='LinkedIn'></span>
		                  <span class='st_pinterest_hcount' displayText='Pinterest'></span>
		                  <span class='st_email_hcount' displayText='Email'></span>
                    </div>
                  

                  <div class="blog-vote clearfix">
                    <div class="rate-wrapper">											
                      <input type="hidden" name="postPath" value="$postPath">
                      <input type="hidden" name="ws" value="$ws">
                      <a class="score-1" href="#">1</a>
                      <a class="score-2" href="#">2</a>
                      <a class="score-3" href="#">3</a>
                      <a class="score-4" href="#">4</a>
                      <a class="score-5" href="#">5</a>
                      <span class="rate-current-score"><%=voteValueOfUser*20%></span>
                    </div>
                    <span class="vote-label pull-right">Avg. Rating: $voteAvg Votes: $voteTotal </span>
                  </div>

                </footer> <!-- end article footer -->

            </article> <!-- end article -->


            <div class="uiBox">
                <% commentList(post)%>
                <% commentForm(post) %>
            </div>


        </div> <!-- end of m ain -->
        <div class="sidebar" id="sidebar">
            <%
            // show edit button
            if ((poster == viewer) && (uicomponent.class.name =="org.exoplatform.wcm.webui.scv.UIPresentation")) {
            %>
            <a class="btn " href="/portal/intranet/blog/admin?edit=true&path=/collaboration/Groups/platform/users/Documents/Blog/${post.name}&backto=/portal/intranet/blog"><i class="uiIconLightGray uiIconEdit"></i> Edit</a>
            <%
            } // end edit button
            %>
          <a class="btn" href="/portal/intranet/blog" title="Back to top" ><i class="uiIconEcmsGoBack uiIconEcmsLightGray" ></i> Back</a>
        </div> <!-- end sidebar -->

    </div> <!-- end #content -->
</div> <!-- end #container -->
<%
/* display comments of this post */
void commentList(Node post) {

try {
def comments = uicomponent.getApplicationComponent(CommentsService.class).getComments(post, null)
def formatter =  new SimpleDateFormat("'on' MMM d, yyyy 'at' h:mm a")
def viewer = _ctx.getRequestContext().getRemoteUser()
def poster = post.getProperty("exo:owner").string
def postPath = post.getPath();
def isAdmin = Utils.isAdministratorUser();
if (comments) {
def plural=""
if (comments.size > 1) plural = "s"
%>
<h5 class="title">${comments.size} comment ${plural}</h5>
<div class="uiContentBox">
    <div>
        <%
        int i=0;
        for (comment in comments) {
        try {
        def rem = ((i++)%2 == 0)?"even":"odd"
        def commentor = comment.getProperty("exo:commentor").string
        def commentorAvatar = avatarUrl(commentor)
        def commentorName = fullName(commentor)
        def commentContent = comment.getProperty("exo:commentContent").string
        def commentDate = formatter.format(comment.getProperty("exo:commentDate").date.time)
        def isOwner = (commentor == viewer)
				def cmtPath = comment.getPath();
				def timeId = comment.getProperty("exo:commentDate").date.time.time;
				def approve = false;
				def postUuid = post.getUUID();
     		def _ws = comment.getSession().getWorkspace().getName();
				try{
					approve = comment.getProperty("exo:commentStatus").getBoolean();
				}catch(Exception ex){
					approve=true;
				}
        %>
        <div class="commentItem" id="comment-${comment.name}">
					<%if(isAdmin || viewer==poster){%>
							<div class="commmentLeft">
								<a class="avatarXSmall" href="/portal/intranet/profile/$commentor" rel="tooltip" data-placement="bottom" data-original-title="$commentorName">
									<img alt="$commentorName" src="$commentorAvatar">
								</a>
							</div><!--end commentLeft-->
							<div class="commentRight">
									<div class="author">
										<a href="/portal/intranet/profile/$commentor">$commentorName</a>
										<span class="dateTime">$commentDate </span> &nbsp; &nbsp;
										<span class="reply actionIcon"><i class="uiIconReply uiIconLightGray"></i> Reply</span>
											<span id="approve-$timeId" class="pull-right approve">
												<%if(!approve){%>
													<button type="button" class="btn btn-primary" onclick="eXo.ecm.blog.changeStatus($timeId, '$cmtPath', '$postPath', '$_ws');" >Approve</button>
												<%}else{%>
													<button type="button" class="btn" onclick="eXo.ecm.blog.changeStatus($timeId, '$cmtPath', '$postPath', '$_ws');"  >Disapprove</button>
												<%}%>
											</span>
									</div>
									<p class="contentComment">
										<span id="$timeId" class="ContentBlock
										<%if(!approve){%>
											disapproved
										<%}%>
										" > $commentContent
									
										</span>	 &nbsp; &nbsp;
										<span>
											<a class="actionIcon" href="javascript:void(0);" onclick="eXo.ecm.blog.loadToEdit('$cmtPath', '$postUuid', '$timeId', '$_ws')"><i class="uiIconLightGray uiIconEdit"></i></a>
											<a class="actionIcon" href="javascript:void(0);" onclick="eXo.ecm.blog.deleteComment('$cmtPath', '${comment.name}' ,'$_ws')"><i class="uiIconLightGray uiIconDelete" ></i></a>
										</span>
									</p>
							</div><!--end commentRight-->
					<%}else{%>
          <%if(approve){%>
          <div class="commmentLeft">
            <a class="avatarXSmall" href="/portal/intranet/profile/$commentor" rel="tooltip" data-placement="bottom" data-original-title="$commentorName">
              <img alt="$commentorName" src="$commentorAvatar">
            </a>
          </div><!--end commentLeft-->
          <div class="commentRight">
            <div class="author">
              <a href="/portal/intranet/profile/$commentor">$commentorName</a>
              <span class="dateTime">$commentDate </span>
            </div>
            <p class="contentComment"></p>
            <p id="$timeId" class="ContentBlock" >$commentContent</p>
          </div><!--end commentRight-->
          <%}}%>
        </div><!--end commentItem-->
        <%
        } catch (Exception e) {
        	print e
        	continue; //skip broken comments
        }
        } // end loop on comments
        %>
    </div>
</div> <!--end commentlist-->
<%
} // end if comments
else {
%>
<h5 class="title">Comments</h5>
<%
}
} catch (Exception e) {
print e // don't say anything
}
} // end comment list

/* render the comment form */
void commentForm(Node post) {

try {
//def post = uicomponent.originalNode
def uuid = post.getUUID()
def viewer = _ctx.getRequestContext().getRemoteUser()
def fme = fullName(viewer)
def avt = avatarUrl(viewer)
%>
<div class="commentList uiContentBox inputContainer inputContainerShow" style="display: block;">
    <div class="commentItem commentFormBox" id="respond-$uuid">

        <div class="commmentLeft">
            <a class="avatarXSmall" rel="tooltip" data-placement="bottom" href="/portal/intranet/profile/$viewer" data-original-title="$fme">
                <img src="$avt" alt="$fme">
            </a>
        </div><!--end commentLeft-->

        <div class="commentRight">
            <div class="commentInputBox " id="commentInputBox">
                <form class="form-inline media" id="commentform-$uuid" name="commentform-$uuid">
                		<input type="button" value="Post Comment" class="btn btn-primary  pull-right" rel="tooltip" data-placement="bottom" id="btn-$uuid" data-original-title="Comment" onclick="eXo.ecm.blog.postComment('$uuid')" />
                		<div class="media-body">
                		
	                    <input name="jcrPath" type="hidden" value="/repository/collaboration${post.path}"/>
	                    <input name="commentPath" type="hidden" value="${post.path}"/>
	                    <input name="timeId" type="hidden" value=""/>
	                    <input type="text" name="comment" id="comment-$uuid" placeholder="Your Comment Here"   tabindex="0" style="width:100%" />
                    </div>
                </form>
            </div>
        </div><!--end commentRight-->
    </div> <!--end commentItem-->
</div><!--end commentlist-->

<%
} catch (Exception e) {
print e
}
} // end comment form




/* render tags of an article */
void tags(def node) {
def folkService = uicomponent.getApplicationComponent(NewFolksonomyService.class)
def tags = folkService.getLinkedTagsOfDocument(node, "collaboration")
def i = 0;

if (!tags) {
tags = [];
}
else {
%>
<span class="tags-title">Tags:</span>
<%
}

for(tag in tags) {
def name = tag.name
def url="/portal/intranet/blog?folder-id=repository:collaboration:/tags/$name"
%>
<a href="$url" title="View all posts in $name" rel="category tag" class="label tag">$name</a>
<%

if (i++ < (tags.size-1)) print " "

} //end loop on  tags


} //end renderTags




/* (only display  viewable webcontents here */
boolean isValidBlogEntry(def node) {
return true;
/*
	def frozen = node.primaryNodeType.name == "nt:frozenNode"
	if (frozen) {
	def viewable = Utils.isViewable(node)
	def type = node.getProperty("jcr:frozenPrimaryType").string
	if (viewable && ((type == "exo:webContent") || (type == "exo:blog"))) {
	return true;
	}
	}
	return false;
*/
}

/* render a blog entry */
void renderPost(def entry) {
try {

def cssOption = "CSSData=";
def excerpt = getSummary(entry);

// start with the excerpt
if (excerpt) {
%>
<em>$excerpt</em>
<%
} // end if excerpt

// print the main content

def blogContent = entry.getProperty("exo:blogContent").string;
print uicomponent.getInlineEditingField(entry, blogContent, '', "WYSIWYG", "Text", "Content", true, cssOption, "toolbar=CompleteWCM");
%>
<%

} catch (Exception e) {
print e;
}
} // end render post



//boolean isShowCategories = getPortletPreference("ShowCategories");
//boolean isShowTags = getPortletPreference("ShowTags");
/* get the portlet preferences by name */
boolean getPortletPreference(String name) {
String value = _ctx.requestContext.request.preferences.getValue(name, null);
if(value != null) return Boolean.parseBoolean(value);
return false;
}

/* get summary or desription */
String getSummary(Node node) throws Exception {
String desc = "";

	//if (node.hasProperty("exo:blogContent")) {
		desc = node.getProperty("exo:blogContent").string;
	//}
/*
else if (node.hasNode("exo:blogContent")) {
	Node content = node.getNode("exoontent");
		if (content.hasProperty("dc:description")) {
			try {
			desc = content.getProperty("dc:description").getValues()[0].getString();
			} catch (Exception ex) {
			return null;
			}
		}
	}
*/
return desc;
}  // end getSummary


/* get the full name from poster */
String fullName(def poster) {
def userHandler = uicomponent.getApplicationComponent(OrganizationService.class).userHandler
def user = userHandler.findUserByName(poster)
def name = user.fullName
return name?name:poster
}

/* get the url of the avatar */
String avatarUrl(def poster) {
String avatar = "/social-resources/skin/ShareImages/Avatar.gif";
try {
def identityManager = uicomponent.getApplicationComponent(IdentityManager.class)
def userIdentity = identityManager.getOrCreateIdentity(OrganizationIdentityProvider.NAME, poster)
def userProfile = userIdentity.getProfile()
if (userProfile.getAvatarImageSource()) avatar = userProfile.getAvatarImageSource()
} catch (Exception e) {
print e.message // ugly old school debug
}
return avatar
}

%>
       
